name: ci
on:
  push:
    branches:
      - 'main'
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      SERVICE1: result
      SERVICE2: vote
      SERVICE3: worker
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Docker and Docker Compose on remote server
        env:
          HOST: ${{ secrets.SSH_HOST }}
          USER: ${{ secrets.SSH_USER }}
          DEPLOYMENT_PATH: "/opt/services/"
        run: |
          eval "$(ssh-agent -s)"
          ssh-add <(echo "${{ secrets.SSH_KEY }}")
          
          ssh -o StrictHostKeyChecking=no $USER@$HOST "cd $DEPLOYMENT_PATH && \
            rm -f .env && \
            sudo apt-get update && \
            sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release && \
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
            echo \"deb [arch=\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && \
            sudo apt-get update && \
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io"

      - name: Copy docker-compose file to Droplet
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: ./docker-compose.images.yml
          target: /home/${{ secrets.SSH_USERNAME }}/project

      - name: Copy healthcheck files to Droplet
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: ./healthchecks
          target: /home/${{ secrets.SSH_USERNAME }}/project

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            source ~/.profile
            cd /home/${{ secrets.SSH_USERNAME }}/project
            docker-compose -f docker-compose.images.yml up -d
