name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [result, vote, worker]

    env:
      DOCKER_IMAGE_NAME: jpmrs1313/${{ matrix.service }}:latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service }}-

      - name: Build and push Docker image
        run: |
          echo "Building and pushing Docker image for ${{ matrix.service }}"
          docker build -t $DOCKER_IMAGE_NAME ./${{ matrix.service }} --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache
          docker push $DOCKER_IMAGE_NAME

      - name: Check if Docker Compose is installed
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            if ! [ -x "$(command -v docker-compose)" ]; then
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

      - name: Copy docker-compose file to Droplet
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: ./docker-compose.images.yml
          target: /home/${{ secrets.SSH_USERNAME }}/docker-compose.images.yml

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd /home/${{ secrets.SSH_USERNAME }}
            docker-compose -f docker-compose.images.yml up -d

      - name: Notify on success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            const github = require('@actions/github');
            const context = github.context;
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: "Deployment successful for ${{ matrix.service }}."
            });

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const github = require('@actions/github');
            const context = github.context;
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: "Deployment failed for ${{ matrix.service }}."
            });
