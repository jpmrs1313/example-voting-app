name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      SERVICE1: result
      SERVICE2: vote
      SERVICE3: worker

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker images
        run: |
          for service in $SERVICE1 $SERVICE2 $SERVICE3; do
            echo "Building and pushing Docker image for $service"
            docker build -t jpmrs1313/$service:latest ./$service
            docker push jpmrs1313/$service:latest
          done

      - name: Install Docker Compose
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            if ! [ -x "$(command -v docker-compose)" ]; then
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

      - name: Copy docker-compose file to Droplet
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: ./docker-compose.images.yml
          target: /home/${{ secrets.SSH_USERNAME }}/project

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd /home/${{ secrets.SSH_USERNAME }}/project
            docker-compose -f docker-compose.images.yml up -d
